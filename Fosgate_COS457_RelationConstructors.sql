-- TITLE: Fosgate_COS457_RelationConstructors
-- AUTHOR: Jeffrey Fosgate
-- DATE OF GITHUB COMMIT: 10/30/2025
-- Relation / table constructors for LANDLORD, PROPERTY and ADDRESS entity types.
-- USER_PROF, RENTER, and REVIEW are provided to demonstrate how LANDLORD, PROPERTY and ADDRESS derive some of their attributes from other entity types.

CREATE TABLE USER_PROF (
	USER_ID INT UNSIGNED UNIQUE NOT NULL AUTO_INCREMENT,
	USERNAME VARCHAR(50) UNIQUE NOT NULL,
    PASS_WORD VARCHAR(50) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
    PHONE_NUMBER BIGINT UNSIGNED NOT NULL,
    GENDER CHAR(1) NOT NULL,
    PROF_DESC NVARCHAR(1000),
    PICTURE_URL NVARCHAR(1000),
    REAL_NAME NVARCHAR(200) NOT NULL,
    BIRTH_DATE DATE NOT NULL,
    PRIMARY KEY (USER_ID),
    CHECK (GENDER IN ('M','F','X','?'))
);

CREATE TABLE RENTER (
	RENTER_ID INT UNIQUE NOT NULL,
    FOREIGN KEY (RENTER_ID) 
    REFERENCES USER_PROF (USER_ID)
);

CREATE TABLE LANDLORD (
	LANDLORD_ID INT UNIQUE NOT NULL,
    FOREIGN KEY (LANDLORD_ID) 
    REFERENCES USER_PROF (USER_ID)
);

CREATE TABLE REVIEW (
	REVIEW_ID INT UNSIGNED UNIQUE NOT NULL AUTO_INCREMENT,
    USER_ID INT NOT NULL,
    PROPERTY_ID INT NOT NULL,
    REVIEW_COMMENT VARCHAR(1000),
    STARS FLOAT(1,2) UNSIGNED NOT NULL,
    PRIMARY KEY (REVIEW_ID),
    FOREIGN KEY (PROPERTY_ID) REFERENCES PROPERTY (PROPERTY_ID),
    FOREIGN KEY (USER_ID) REFERENCES RENTER (RENTER_ID),
    CHECK (RATING >= 0.0 AND RATING <= 5.0)
);

-- An attempt to calculate property ratings using an SQL trigger.
-- The team has decided to implement this in the Python backend during Phase III.
-- For now, PROPERTY.PROPERTY_RATING is represented as a FLOAT(1,2) that can be NULL (in the case of no reviews provided).

/* CREATE TRIGGER UPDATE_PROPERTY_RATING AFTER UPDATE ON REVIEW
FOR EACH ROW
BEGIN
	WITH ALL_PROPERTY_REVIEWS
    AS (SELECT STARS
		FROM REVIEW
		WHERE PROPERTY_ID = NEW.PROPERTY_ID)
    UPDATE PROPERTY
    SET PROPERTY.PROPERTY_RATING = (SELECT AVG(STARS)
									FROM ALL_PROPERTY_REVIEWS)
END; */

CREATE TABLE ADDRESS (
	ADDR_ID INT UNSIGNED UNIQUE NOT NULL AUTO_INCREMENT,
    STREET VARCHAR(200) NOT NULL,
	CITY VARCHAR(100) NOT NULL,
	ZIPCODE INT UNSIGNED NOT NULL,
    PRIMARY KEY (ADDR_ID)
);

CREATE TABLE PROPERTY (
	PROPERTY_ID INT UNSIGNED UNIQUE NOT NULL AUTO_INCREMENT,
    RENT_COST INT UNSIGNED NOT NULL,
    PROPERTY_RATING FLOAT(1,2),
    LANDLORD_ID INT NOT NULL,
    BATHROOMS SMALLINT UNSIGNED NOT NULL,
    BEDS SMALLINT UNSIGNED NOT NULL,
    CAN_RENT BOOL NOT NULL,
    APT_NUM INT UNSIGNED,
    ADDR INT UNIQUE NOT NULL,
    PRIMARY KEY (PROPERTY_ID),
    FOREIGN KEY (LANDLORD_ID) REFERENCES LANDLORD (LANDLORD_ID),
	FOREIGN KEY (ADDR) REFERENCES ADDRESS (ADDR_ID),
    CHECK (PROPERTY_RATING >= 0.0 AND PROPERTY_RATING <= 5.0)
);



